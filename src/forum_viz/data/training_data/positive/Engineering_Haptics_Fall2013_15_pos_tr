0:<I'm curious how you found out about this, because as a high school student I would have loved this! comment me back :)>
1:<A Stanford student posted an advertisement on a Facebook page I follow :)>
2:<It worked! I left it alone for a few hours and now it's staying on. Still not going to try to wiggle it too much though. :)>
3:<Thank you so much for providing this wonderful kit! :-)  I have finished assembling the Hapkit and look forward to the next step!!>
4:<Haha I guess I'm just really driven by my passion ^_^ That's awesome to hear about working in his lab; I am also really interested in his work and hopefully can be of use to him or one of his grad students during a literature review or other busy work for one of his two awesome projects. What's busy work for you guys is a whole new world for me :)>
5:<I also visited her MAHI lab back when I was in high school; it's impressive :)>
6:<I was planning the next 5 years of classes I want to take and am already running into problems with the BME department about taking certain "restricted" courses, as well as running out of hours in the day :/. But I feel ya, biomechatronics, on a full-body level and a on a cellular level, is my passion :)>
7:<I misread the instructions on Step 3 and set the force to 3N instead of 0.3N. Woops! But it was really quite impressive how fast the handle flew all the way over to the right before I could grab it!

Don't worry, no Hapkit was harmed ... aside from a little bit of neoprene needing to be re-glued onto the handle. :)>
8:<Yep! :)

One piece of advice is to hold firmly onto the handle whenever testing a new program that involves motor output. The Hapkit can't hurt you, but it can hurt itself (a little, as you saw).

One thing I wonder about (because of your mention of re-gluing of the neoprene) is whether the motor pulley was still rubbing against the neoprene even when the handle had flown all the way to the side. We tried to design it such that when the handle is all the way to one side or the other, the motor comes off the end of the neoprene and so it will spin harmlessly and not burn rubber. If, due to your particular setup, the motor pulley doesn't lose contact with the neoprene at the far ends of the sector pulley, you might want to help prevent your Hapkit from destroying itself by trimming away more of the neoprene near the ends.

(However, there is a downside to doing this. If you are using your Hapkit while rendering a virtual environment and accidentally move the handle such that you lose contact with the motor, you will need to re-center the Hapkit handle and press the reset button on the Hapkit Board in order to "re-zero" the position sensor. You'll see what I mean next week.)>
9:<I came across two interesting haptics projects on Kickstarter.

The first is a home flight simulation yoke, in which haptics simulate the forces an actual pilot would feel at the controls. The particular actuator this project used was very interesting, it's just a huge wire coil. http://www.kickstarter.com/projects/irisdynamics/affordable-force-feedback-flight-sim-control-yoke?ref=category 

The second is a touch feedback system for virtual reality/video game setups. Very similar idea to what we're doing :) http://www.kickstarter.com/projects/tacticalhaptics/reactive-griptm-touch-feedback-for-vr-and-video-ga?ref=category>
10:<It's odd that that fixed your problem... You should not need to put the code for reading the FSR in section 1. Where did you declare the variable fsrValue? (ie. int fsrValue;)>
11:<In my serial monitor, after spitting out a few values I get the message "Initializing SD card...initialization failed!" and it stops printing updatedPos. I checked and the line of code I added (Serial.println(updatedPos);) is right, and I didn't add anything else to the code. How do I get it to stop looking for an SD card?>
12:<It works now, thanks for the help :)>
13:<Me again, with yet another problem. When I hit the board's reset button, it doesn't reset the current position to zero. Sometimes it doesn't change the reading at all, and other times it changes it randomly, like 2080 -> 253 or -1215 -> 623. So far I haven't changed any code besides inserting Serial.println(updatedPos); .

By the way, the new board fixed my initial serial monitor issue :)>
14:<Yeah, it's all working! Feels good to finally be done the Week 3 Lab :)>
